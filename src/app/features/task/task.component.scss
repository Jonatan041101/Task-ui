@import '../../../styles/variables.scss';
@import '../../../styles/mixin.scss';
/* Rely on global partials for layout and buttons */

// ================ TASK CARDS ================
.task-card {
  background: $white;
  border-radius: 12px;
  padding: 25px;
  @include card-shadow();
  @include transition(all 0.3s ease);
  border-left: 5px solid $primary-color;

  &:hover {
    transform: translateY(-3px);
    @include hover-shadow();
  }

  &.completed {
    opacity: 0.8;
    border-left-color: $success-green;

    .task-title {
      text-decoration: line-through;
      color: $secondary-gray;
    }
  }
}

.task-header {
  margin-bottom: 15px;
}

.task-title {
  font-size: 1.4rem;
  font-weight: 700;
  color: $text-black;
  margin-bottom: 12px;
  line-height: 1.3;
}

.task-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 15px;
  flex-wrap: wrap;
  gap: 10px;
}

.task-priority {
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;

  &.priority-high {
    background: lighten($error-red, 45%);
    color: $error-red;
  }

  &.priority-medium {
    background: lighten($primary-color, 30%);
    color: darken($primary-color, 30%);
  }

  &.priority-low {
    background: lighten($success-green, 45%);
    color: $success-green;
  }
}

.task-date {
  color: $secondary-gray;
  font-size: 0.9rem;
}

.task-description {
  color: darken($secondary-gray, 10%);
  font-size: 1rem;
  line-height: 1.5;
  margin-bottom: 20px;
}

.task-status {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 20px;
  flex-wrap: wrap;
  gap: 10px;
}

.status-badge {
  padding: 8px 16px;
  border-radius: 25px;
  font-size: 0.9rem;
  font-weight: 600;

  &.status-pending {
    background: lighten($primary-color, 30%);
    color: darken($primary-color, 30%);
  }

  &.status-completed {
    background: lighten($success-green, 45%);
    color: $success-green;
  }
}

.task-actions {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
}

// ================ EMPTY STATE ================
.tasks-grid .empty-state {
  grid-column: 1 / -1;
  justify-self: center;
}

.tasks-grid:has(.empty-state) {
  grid-template-columns: 1fr;
}

.container-empty-state{
  display: flex;
  justify-content: center;
  
}
.empty-state {
  text-align: center;
  padding: 60px 20px;
  color: $text-black;
  max-width: 500px;
  margin: 0 auto;

  h3 {
    font-size: 2rem;
    margin-bottom: 15px;
    opacity: 0.8;
  }

  p {
    font-size: 1.2rem;
    opacity: 0.7;
    color: darken($secondary-gray, 20%);
  }
}

.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(5px);

  &.active {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

.modal-content {
  background: $white;
  border-radius: 12px;
  padding: 30px;
  width: 90%;
  max-width: 500px;
  @include hover-shadow();
  max-height: 90vh;
  overflow-y: auto;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 25px;
}

.modal-title {
  font-size: 1.8rem;
  color: $text-black;
  font-weight: 700;
}

.close-btn {
  background: none;
  border: none;
  font-size: 2rem;
  color: $secondary-gray;
  cursor: pointer;
  padding: 0;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  border-radius: 50%;
  @include transition(all 0.3s ease);

  &:hover {
    background: lighten($secondary-gray, 40%);
    color: darken($secondary-gray, 20%);
  }
}